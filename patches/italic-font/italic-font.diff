diff --git a/config.def.h b/config.def.h
index 91ab8ca..ddbc86f 100644
--- a/config.def.h
+++ b/config.def.h
@@ -6,6 +6,7 @@
  * font: see http://freedesktop.org/software/fontconfig/fontconfig-user.html
  */
 static char *font = "Liberation Mono:pixelsize=12:antialias=true:autohint=true";
+static char *ifont = "Gohu GohuFont";
 static int borderpx = 2;

 /*
diff --git a/st.h b/st.h
index fd3b0d8..38b1926 100644
--- a/st.h
+++ b/st.h
@@ -73,6 +73,7 @@ typedef union {
 	int i;
 	uint ui;
 	float f;
+	float fi;
 	const void *v;
 	const char *s;
 } Arg;
diff --git a/x.c b/x.c
index aa09997..2dc1bdc 100644
--- a/x.c
+++ b/x.c
@@ -156,7 +156,7 @@ static void xresize(int, int);
 static void xhints(void);
 static int xloadcolor(int, const char *, Color *);
 static int xloadfont(Font *, FcPattern *);
-static void xloadfonts(const char *, double);
+static void xloadfonts(const char *, const char*, double, double);
 static void xunloadfont(Font *);
 static void xunloadfonts(void);
 static void xsetenv(void);
@@ -241,7 +241,9 @@ static int frclen = 0;
 static int frccap = 0;
 static char *usedfont = NULL;
 static double usedfontsize = 0;
+static double usedifontsize = 0;
 static double defaultfontsize = 0;
+static double defaultifontsize = 0;

 static char *opt_class = NULL;
 static char **opt_cmd  = NULL;
@@ -298,6 +300,7 @@ zoom(const Arg *arg)
 	Arg larg;

 	larg.f = usedfontsize + arg->f;
+	larg.fi = usedifontsize + arg->f;
 	zoomabs(&larg);
 }

@@ -305,7 +308,7 @@ void
 zoomabs(const Arg *arg)
 {
 	xunloadfonts();
-	xloadfonts(usedfont, arg->f);
+	xloadfonts(usedfont, ifont, arg->f, arg->fi);
 	cresize(0, 0);
 	redraw();
 	xhints();
@@ -316,8 +319,9 @@ zoomreset(const Arg *arg)
 {
 	Arg larg;

-	if (defaultfontsize > 0) {
+	if (defaultfontsize > 0 && defaultifontsize > 0) {
 		larg.f = defaultfontsize;
+		larg.fi = defaultifontsize;
 		zoomabs(&larg);
 	}
 }
@@ -981,10 +985,12 @@ xloadfont(Font *f, FcPattern *pattern)
 }

 void
-xloadfonts(const char *fontstr, double fontsize)
+xloadfonts(const char *fontstr, const char *ifontstr, double fontsize, double ifontsize)
 {
 	FcPattern *pattern;
+	FcPattern *ipattern;
 	double fontval;
+	double ifontval;

 	if (fontstr[0] == '-')
 		pattern = XftXlfdParse(fontstr, False, False);
@@ -994,6 +1000,14 @@ xloadfonts(const char *fontstr, double fontsize)
 	if (!pattern)
 		die("can't open font %s\n", fontstr);

+	if (ifontstr[0] == '-')
+		ipattern = XftXlfdParse(ifontstr, False, False);
+	else
+		ipattern = FcNameParse((FcChar8 *)ifontstr);
+
+	if (!ipattern)
+		die("can't open font %s\n", ifontstr);
+
 	if (fontsize > 1) {
 		FcPatternDel(pattern, FC_PIXEL_SIZE);
 		FcPatternDel(pattern, FC_SIZE);
@@ -1028,14 +1042,46 @@ xloadfonts(const char *fontstr, double fontsize)
 			defaultfontsize = fontval;
 	}

+	if (ifontsize > 1) {
+		FcPatternDel(ipattern, FC_PIXEL_SIZE);
+		FcPatternDel(ipattern, FC_SIZE);
+		FcPatternAddDouble(ipattern, FC_PIXEL_SIZE, (double)ifontsize);
+		usedifontsize = ifontsize;
+	} else {
+		if (FcPatternGetDouble(ipattern, FC_PIXEL_SIZE, 0, &ifontval) ==
+				FcResultMatch) {
+			usedifontsize = ifontval;
+		} else if (FcPatternGetDouble(ipattern, FC_SIZE, 0, &ifontval) ==
+				FcResultMatch) {
+			usedifontsize = -1;
+		} else {
+			/*
+			 * Default font size is 12, if none given. This is to
+			 * have a known usedfontsize value.
+			 */
+			FcPatternAddDouble(ipattern, FC_PIXEL_SIZE, 12);
+			usedifontsize = 12;
+		}
+		defaultifontsize = usedifontsize;
+	}
+	if (xloadfont(&dc.ifont, ipattern))
+		die("can't open font %s\n", ifontstr);
+	if (usedifontsize < 0) {
+		FcPatternGetDouble(dc.ifont.match->pattern,
+		                   FC_PIXEL_SIZE, 0, &ifontval);
+		usedifontsize = ifontval;
+		if (ifontsize == 0)
+			defaultifontsize = ifontval;
+	}
+
 	/* Setting character width and height. */
 	win.cw = ceilf(dc.font.width * cwscale);
 	win.ch = ceilf(dc.font.height * chscale);

 	FcPatternDel(pattern, FC_SLANT);
-	FcPatternAddInteger(pattern, FC_SLANT, FC_SLANT_ITALIC);
-	if (xloadfont(&dc.ifont, pattern))
-		die("can't open font %s\n", fontstr);
+	FcPatternAddInteger(ipattern, FC_SLANT, FC_SLANT_ITALIC);
+	if (xloadfont(&dc.ifont, ipattern))
+		die("can't open font %s\n", ifontstr);

 	FcPatternDel(pattern, FC_WEIGHT);
 	FcPatternAddInteger(pattern, FC_WEIGHT, FC_WEIGHT_BOLD);
@@ -1145,7 +1191,7 @@ xinit(int cols, int rows)
 		die("could not init fontconfig.\n");

 	usedfont = (opt_font == NULL)? font : opt_font;
-	xloadfonts(usedfont, 0);
+	xloadfonts(usedfont, ifont, 0, 0);

 	/* colors */
 	xw.cmap = XDefaultColormap(xw.dpy, xw.scr);

